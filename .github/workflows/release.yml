on:
  push:
    branches:
      - master
  workflow_dispatch:  # Allow manual triggering from GitHub UI

name: Build and Release APK

env:
  PROPERTIES_PATH: './android/key.properties'

jobs:
  build:
    name: Build and Release APK
    if: "contains(github.event.head_commit.message, 'Update:')"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Extract version from commit message
      - name: Extract version
        id: extract_version
        run: |
          version=$(echo ${{ github.event.head_commit.message }} | grep -oP '(?<=Update: v)\d+\.\d+\.\d+')
          echo "version=${version}" >> $GITHUB_OUTPUT

      # Set up Java environment
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17.x'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Set up Flutter environment
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Configure signing properties
      - name: Configure signing properties
        run: |
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" > ${{env.PROPERTIES_PATH}}
          echo "storePassword=${{ secrets.KEY_PASSWORD }}" >> ${{env.PROPERTIES_PATH}}
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> ${{env.PROPERTIES_PATH}}

      # Decode keystore file
      - name: Decode keystore file
        run: echo "${{ secrets.KEY_STORE }}" | base64 --decode > android/app/key.jks

      # Get Flutter dependencies
      - name: Get Flutter dependencies
        run: flutter pub get

      # Analyze Dart code
      - name: Analyze Dart code
        run: flutter analyze .

      # Build APK
      - name: Build APK
        run: flutter build apk --release --split-per-abi

      # Release APK
      - name: Release APK
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: gokadzev/Musify
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
          asset_name: Musify-arm64-v8a.apk
          tag: ${{ steps.extract_version.outputs.version }}
          prerelease: false
          overwrite: true
