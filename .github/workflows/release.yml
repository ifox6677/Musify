on:
  push:
    branches:
      - master
  workflow_dispatch:  # 允许从 GitHub UI 手动触发

name: Build and Release APK

env:
  PROPERTIES_PATH: './android/key.properties'

jobs:
  build:
    name: Build and Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 提取版本号
      - name: Extract version
        id: extract_version
        run: |
          version=$(echo "${{ github.event.head_commit.message }}" | grep -oP '(?<=Update: v)\d+\.\d+\.\d+' || true)
          echo "version=${version}" >> $GITHUB_OUTPUT

      # 设置 Java 环境
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17.x'

      # 缓存 Gradle 依赖
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 设置 Flutter 环境
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # 配置签名属性
      - name: Configure signing properties
        run: |
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" > ${{env.PROPERTIES_PATH}}
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> ${{env.PROPERTIES_PATH}}
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> ${{env.PROPERTIES_PATH}}

      # 解码 keystore 文件
      - name: Decode keystore file
        run: echo "${{ secrets.KEY_STORE }}" | base64 --decode > android/app/key.jks

      # 获取 Flutter 依赖
      - name: Get Flutter dependencies
        run: flutter pub get

      # 分析 Dart 代码
      - name: Analyze Dart code
        run: flutter analyze .

      # 清理项目
      - name: Clean Flutter project
        run: flutter clean

      # 构建 APK
      - name: Build APK
        run: flutter build apk --release

      # 列出构建目录（调试用）
      - name: List build directory
        run: ls -al build/app/outputs/flutter-apk/

      # 发布 APK
      - name: Release APK
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: gokadzev/Musify
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
          asset_name: Musify-arm64-v8a.apk
          tag: ${{ steps.extract_version.outputs.version }}
          prerelease: false
          overwrite: true
